name: Tangle code extracted from documentation

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_TYPE: Release

jobs:
  # Build job
  tangle:
    runs-on: ubuntu-latest
    outputs:
      tangle-roots: ${{ steps.set-tangle-roots.outputs.roots }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup Pages
      uses: actions/configure-pages@v2
    - name: Setup Python
      run: pip install -r requirements.txt
    - name: Build with Sphinx
      run: make tangle
    - name: List tangle roots
      id: set-tangle-roots
      run: echo "::set-output name=roots::$(printf '['; find _build/tangle -maxdepth 1 -mindepth 1 -type d -printf '"%P", '; printf ']\n')"
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: tangled-code
        path: _build/tangle

  # Test job
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        tangle-root: ${{ fromJson(needs.tangle.outputs.tangle-roots) }}
        include:
        - os: ubuntu-latest
          install-deps: |
            sudo apt-get update -y
            sudo apt-get install -y xorg-dev
        
    runs-on: ${{ matrix.os }}
    needs: tangle
    steps:
    - if: ${{ matrix.install-deps }}
      name: Install dependencies
      run: ${{ matrix.install-deps }}

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: tangled-code

    - name: Configure CMake
      run: cmake -S "${{ matrix.tangle-root }}" -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
